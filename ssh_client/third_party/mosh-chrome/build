#!/usr/bin/env python3
# Copyright 2020 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

"""Build mosh-chrome package."""

import os
from pathlib import Path
import sys

FILESDIR = Path(__file__).resolve().parent
sys.path.insert(0, str(FILESDIR.parent.parent / "bin"))

import ssh_client  # pylint: disable=wrong-import-position


ARCHIVES = ("%(P)s.tar.gz",)
PATCHES = (
    "%(pn)s-private-net.patch",
    "%(pn)s-0.5.6-mosh-main.patch",
    "%(pn)s-0.5.6-hterm-update.patch",
    "%(pn)s-0.5.6-app-to-ext.patch",
    "%(pn)s-0.5.6-misc.patch",
    "%(pn)s-dist-reuse.patch",
    "%(pn)s-0.5.6-ssh-agent.patch",
    "%(pn)s-libssh-update.patch",
    "%(pn)s-0.5.6-reconnect.patch",
    "%(pn)s-0.5.6-contextmenu.patch",
    "%(pn)s-0.5.6-icon.patch",
    "%(pn)s-0.5.6-hterm-runcommandclass.patch",
    "%(pn)s-0.5.6-hterm-storage.patch",
    "%(pn)s-0.5.6-argv-pass-thru.patch",
    "%(pn)s-pnacl-python2.patch",
    "%(pn)s-mosh-update.patch",
    "%(pn)s-connect.patch",
)


def src_compile(_metadata):
    """Compile the source."""
    # The bazel build handles the toolchain itself, so don't override.
    for var in ("CC", "CXX"):
        os.environ.pop(var, None)
    ssh_client.run(
        [
            "bazel-5",
            "build",
            "--verbose_failures",
            "-s",
            "--spawn_strategy=standalone",
            "--genrule_strategy=standalone",
            "//:mosh_chrome",
        ],
        extra_env={"DISTDIR": str(ssh_client.DISTDIR)},
    )


def src_install(metadata):
    """Install the package."""
    output = Path(ssh_client.OUTPUT) / "plugin" / "mosh"
    output.mkdir(exist_ok=True)
    srcdir = Path(metadata["S"])
    genfiles = srcdir / "bazel-bin"

    for f in (genfiles / "mosh_nacl").glob("*"):
        if f.suffix in {".nexe", ".nmf"}:
            ssh_client.copy(f, output / f.name)
    ssh_client.copy(
        genfiles / "mosh_app" / "mosh_version.js", output / "mosh_version.js"
    )
    ssh_client.copy(
        genfiles / "all_architectures" / "mosh_manifest.js",
        output / "mosh_manifest.js",
    )

    FILES = (
        "mosh_client.html",
        "mosh_client.js",
        "mosh_window.html",
        "mosh_window.js",
        "ssh_key.html",
        "ssh_key.js",
    )
    for f in FILES:
        ssh_client.copy(srcdir / "mosh_app" / f, output / f)


# NB: This isn't actually "build", it's "pnacl", but the bazel build's env is a
# bit too sensitive and fails atm with "pnacl".
ssh_client.build_package(sys.modules[__name__], "build")
