{
	"backup_prefs": {
		"message": "Save backup"
	},
	"cache_pin_prompt": {
		"message": "Cache the PIN for this SSH session? (Y/N):"
	},
	"connecting": {
		"message": "Connecting to $1…"
	},
	"connection_dialog_name": {
		"message": "Connection dialogue"
	},
	"disconnect_message": {
		"message": "NaCl plug-in exited with status code $1."
	},
	"faq_menu_label": {
		"message": "FAQs"
	},
	"hterm_loading_resource_start": {
		"message": "Loading $1…"
	},
	"hterm_name_pref_background_color": {
		"message": "Background colour"
	},
	"hterm_name_pref_backspace_sends_backspace": {
		"message": "Backspace key behaviour"
	},
	"hterm_name_pref_color_palette_overrides": {
		"message": "Initial colour palette"
	},
	"hterm_name_pref_ctrl_c_copy": {
		"message": "Ctrl+C copy behaviour"
	},
	"hterm_name_pref_ctrl_plus_minus_zero_zoom": {
		"message": "Ctrl++/-/0 zoom behaviour"
	},
	"hterm_name_pref_ctrl_v_paste": {
		"message": "Ctrl+V paste behaviour"
	},
	"hterm_name_pref_cursor_color": {
		"message": "Text cursor colour"
	},
	"hterm_name_pref_east_asian_ambiguous_as_two_column": {
		"message": "East Asian ambiguous use two columns"
	},
	"hterm_name_pref_enable_bold": {
		"message": "Bold text behaviour"
	},
	"hterm_name_pref_enable_bold_as_bright": {
		"message": "Use bright colours with bold text"
	},
	"hterm_name_pref_find_result_color": {
		"message": "Find results highlight colour"
	},
	"hterm_name_pref_find_result_selected_color": {
		"message": "Find results selected highlight colour"
	},
	"hterm_name_pref_foreground_color": {
		"message": "Text colour"
	},
	"hterm_name_pref_home_keys_scroll": {
		"message": "Home/End key scroll behaviour"
	},
	"hterm_name_pref_keybindings_os_defaults": {
		"message": "Use default OS keyboard bindings/shortcuts"
	},
	"hterm_name_pref_mouse_right_click_paste": {
		"message": "Mouse right-clicks paste content"
	},
	"hterm_name_pref_page_keys_scroll": {
		"message": "Page Up/Down key scroll behaviour"
	},
	"hterm_name_pref_pass_alt_number": {
		"message": "Alt+1..9 switch tab/app behaviour"
	},
	"hterm_name_pref_pass_ctrl_n": {
		"message": "Ctrl+N new window behaviour"
	},
	"hterm_name_pref_pass_ctrl_number": {
		"message": "Ctrl+1..9 switch tab behaviour"
	},
	"hterm_name_pref_pass_ctrl_t": {
		"message": "Ctrl+T new tab behaviour"
	},
	"hterm_name_pref_pass_ctrl_tab": {
		"message": "Ctrl+Tab switch tab behaviour"
	},
	"hterm_name_pref_pass_ctrl_w": {
		"message": "Ctrl+W close tab behaviour"
	},
	"hterm_name_pref_pass_meta_number": {
		"message": "Meta+1..9 switch tab behaviour"
	},
	"hterm_name_pref_pass_meta_v": {
		"message": "Meta+V paste behaviour"
	},
	"hterm_name_pref_paste_on_drop": {
		"message": "Allow drag and drop to paste"
	},
	"hterm_name_pref_screen_border_color": {
		"message": "Screen border colour"
	},
	"hterm_popup_inline_image": {
		"message": "Inline images"
	},
	"hterm_popup_inline_image_disabled": {
		"message": "Inline images disabled"
	},
	"hterm_pref_alt_backspace_is_meta_backspace": {
		"message": "If set, undoes the ChromeOS Alt+Backspace->Delete remap so that Alt+Backspace indeed is Alt+Backspace."
	},
	"hterm_pref_alt_gr_mode": {
		"message": "Select an AltGr detection heuristic.\n\n'null': Auto-detect based on navigator.language:\n      'en-us' => 'none', else => 'right-alt'\n'none': Disable any AltGr emulation.\n'ctrl-alt': Assume Ctrl+Alt means AltGr.\n'left-alt': Assume left Alt means AltGr.\n'right-alt': Assume right Alt means AltGr."
	},
	"hterm_pref_background_color": {
		"message": "The background colour for text with no other colour attributes."
	},
	"hterm_pref_background_position": {
		"message": "CSS value of the background image position.\n\nFor example:\n  10% 10%\n  centre"
	},
	"hterm_pref_backspace_sends_backspace": {
		"message": "If true, the backspace key will send BS ('\\x08', aka ^H). Otherwise the backspace key will send '\\x7f'."
	},
	"hterm_pref_color_palette_overrides": {
		"message": "Override colours in the default palette.\n\nThis can be specified as an array or an object. If specified as an object, it is assumed to be a sparse array, where each property is a numeric index into the colour palette.\n\nValues can be specified as almost any CSS colour value. This includes #RGB, #RRGGBB, rgb(...), rgba(...) and any colour names that are also part of the standard X11 rgb.txt file.\n\nYou can use 'null' to specify that the default value should be not be changed. This is useful for skipping a small number of indices when the value is specified as an array.\n\nFor example, these both set colour index 1 to blue:\n  {1: \"#0000ff\"}\n  [null, \"#0000ff\"]"
	},
	"hterm_pref_cursor_blink_cycle": {
		"message": "The text cursor blink rate in milliseconds.\n\nA two element array, the first of which is how long the text cursor should be on, the second is how long it should be off."
	},
	"hterm_pref_cursor_color": {
		"message": "The colour of the visible text cursor."
	},
	"hterm_pref_desktop_notification_bell": {
		"message": "If true, terminal bells in the background will create a web notification. https://www.w3.org/TR/notifications/\n\nDisplaying notifications requires permission from the user. When this option is set to true, hterm will attempt to ask the user for permission if necessary. Browsers might not show this permission request if it was not triggered by a user action.\n\nChrome extensions with the 'notifications' permission have permission to display notifications."
	},
	"hterm_pref_east_asian_ambiguous_as_two_column": {
		"message": "Whether East Asian Ambiguous characters have two-column width."
	},
	"hterm_pref_enable_bold": {
		"message": "If true, use bold weight font for text with the bold/bright attribute. False to use the normal weight font. Null to auto-detect."
	},
	"hterm_pref_enable_bold_as_bright": {
		"message": "If true, use bright colours (8-15 on a 16-colour palette) for any text with the bold attribute. False otherwise."
	},
	"hterm_pref_enable_csi_j_3": {
		"message": "Whether the 'Erase saved lines' function (mode 3) of the 'Erase display' command (CSI-J) may clear the terminal scrollback buffer.\n\nEnabling this by default is safe."
	},
	"hterm_pref_find_result_color": {
		"message": "The background colour to highlight find results."
	},
	"hterm_pref_find_result_selected_color": {
		"message": "The background colour to highlight the selected find result."
	},
	"hterm_pref_foreground_color": {
		"message": "The foreground colour for text with no other colour attributes."
	},
	"hterm_pref_hide_mouse_while_typing": {
		"message": "Whether to automatically hide the mouse cursor when typing. By default, auto-detect whether the platform/OS handles this.\n\nNote: Your operating system might override this setting and thus you might not always be able to disable it."
	},
	"hterm_pref_keybindings_os_defaults": {
		"message": "Whether common OS keyboard bindings should be respected instead of always capturing for HTerm's own use."
	},
	"hterm_pref_mouse_paste_button": {
		"message": "The mouse button to use for pasting.\n\nFor autodetect, we'll use the middle mouse button for non-X11 platforms (including ChromeOS). On X11, we'll use the right mouse button (since the window manager should handle pasting via the middle mouse button).\n\n0 == left (primary) button.\n1 == middle (auxiliary) button.\n2 == right (secondary) button.\n\nThis option is independent of the setting for right-click paste.\n\nNote: The primary and secondary buttons are handled for you with left- and right-handed mice."
	},
	"hterm_pref_mouse_right_click_paste": {
		"message": "Paste on right mouse button clicks.\n\nThis option is independent of the 'mouse-paste-button' setting.\n\nNote: The primary and secondary buttons are handled for you with left- and right-handed mice."
	},
	"hterm_pref_pass_alt_number": {
		"message": "Whether Alt+1..9 is passed to the browser.\n\nThis is handy when running hterm in a browser tab, so that you don't lose Chrome's 'switch to tab/app' keyboard shortcuts. When not running in a tab it's better to send these keys to the host so that they can be used in Vim or Emacs.\n\nIf true, Alt+1..9 will be handled by the browser. If false, Alt+1..9 will be sent to the host. If null, auto-detect based on browser platform and window type."
	},
	"hterm_pref_pass_ctrl_n": {
		"message": "Whether Ctrl+N is passed to the browser.\n\nIf true, Ctrl+N will be handled by the browser as the 'new window' keyboard shortcut. If false, Ctrl+N will be sent to the host."
	},
	"hterm_pref_pass_ctrl_number": {
		"message": "Whether Ctrl+1..9 is passed to the browser.\n\nThis is handy when running hterm in a browser tab, so that you don't lose Chrome's 'switch to tab' keyboard shortcuts. When not running in a tab, it's better to send these keys to the host so that they can be used in Vim or Emacs.\n\nIf true, Ctrl+1..9 will be handled by the browser. If false, Ctrl+1..9 will be sent to the host. If null, auto-detect based on browser platform and window type."
	},
	"hterm_pref_pass_ctrl_t": {
		"message": "Whether Ctrl+T is passed to the browser.\n\nIf true, Ctrl+T will be handled by the browser as the 'new tab' keyboard shortcut. If false, Ctrl+T will be sent to the host."
	},
	"hterm_pref_pass_ctrl_tab": {
		"message": "Whether Ctrl+Tab and Ctrl+Shift+Tab are passed to the browser.\n\nIf true, Ctrl+Tab and Ctrl+Shift+Tab will be handled by the browser as the 'next/previous tab' keyboard shortcut. If false, the Tab key is sent to the host without Ctrl or Shift."
	},
	"hterm_pref_pass_ctrl_w": {
		"message": "Whether Ctrl+W is passed to the browser.\n\nIf true, Ctrl+W will be handled by the browser as the 'close tab' keyboard shortcut. If false, Ctrl+W will be sent to the host."
	},
	"hterm_pref_pass_meta_number": {
		"message": "Whether Meta+1..9 is passed to the browser.\n\nThis is handy when running hterm in a browser tab, so that you don't lose Chrome's 'switch to tab' keyboard shortcuts. When not running in a tab, it's better to send these keys to the host so that they can be used in Vim or Emacs.\n\nIf true, Meta+1..9 will be handled by the browser. If false, Meta+1..9 will be sent to the host. If null, auto-detect based on browser platform and window type."
	},
	"hterm_pref_paste_on_drop": {
		"message": "If true, drag and dropped text will paste into terminal.\nIf false, dropped text will be ignored."
	},
	"hterm_pref_screen_border_color": {
		"message": "The colour for the border around the terminal screen.\n\nThis controls the colour of the border around the terminal screen to create a visible line at the edges of the screen."
	},
	"hterm_pref_screen_padding_size": {
		"message": "The padding size in pixels around the border of the terminal screen.\n\nThis controls the size of the border around the terminal screen so that the user can add some visible padding to the edges of the screen."
	},
	"hterm_pref_scroll_wheel_may_send_arrow_keys": {
		"message": "When using the alternative screen buffer, and DECCKM (application cursor keys) is active, mouse scroll wheel events will emulate arrow keys.\n\nIt can be temporarily disabled by holding the Shift key.\n\nThis frequently comes up when using pagers (less) or reading man pages or text editors (vi/nano) or using screen/tmux."
	},
	"hterm_pref_use_default_window_copy": {
		"message": "Whether to use the default browser/OS's copy behaviour.\n\nAllow the browser/OS to handle the copy event directly which might improve compatibility with some systems (where copying doesn't work at all), but makes the text selection less robust.\n\nFor example, long lines that were automatically line wrapped will be copied with the newlines still in them."
	},
	"hterm_pref_word_break_match_left": {
		"message": "Regular expression to halt matching to the left (start) of a selection.\n\nNormally this is a character class to reject specific characters.\nWe allow '~' and '.' by default as paths frequently start with those."
	},
	"hterm_title_pref_appearance": {
		"message": "Appearance (fonts, colours, images)"
	},
	"hterm_title_pref_copypaste": {
		"message": "Copy and paste"
	},
	"import_link_label": {
		"message": "Import…"
	},
	"licenses": {
		"message": "Licences"
	},
	"licenses_expand_link": {
		"message": "show licence"
	},
	"licenses_title": {
		"message": "Open source licences"
	},
	"loading_label": {
		"message": "Loading…"
	},
	"mount_button_label": {
		"message": "SFTP mount"
	},
	"nasftp_cmd_color": {
		"message": "colour"
	},
	"nasftp_cmd_color_help": {
		"message": "Toggle colour usage"
	},
	"nasftp_cmd_realpath_help": {
		"message": "Canonicalise paths"
	},
	"nassh_product_name": {
		"message": "Secure Shell"
	},
	"new_window_menu_label": {
		"message": "New window"
	},
	"open_as_window_tip": {
		"message": "[Pro Tip] Use 'Open as window' or 'Fullscreen' to prevent Ctrl+W from closing your terminal!\n[Pro Tip] See $1 for more information."
	},
	"plugin_loading": {
		"message": "Loading $1 program…"
	},
	"preferences_header_ssh_files": {
		"message": "SSH files"
	},
	"preferences_header_terminal": {
		"message": "Terminal settings"
	},
	"preferences_header_uri": {
		"message": "URI handlers"
	},
	"protocol_register_explain": {
		"message": "The button below will attempt to register handlers for all protocols that we support. For example, this allows us to handle ssh:// links directly. A prompt will be displayed by the browser for each protocol, so please confirm/accept each one as it is shown. If no prompts are shown, please see the next section for troubleshooting tips."
	},
	"protocol_register_explain_settings": {
		"message": "If we've already registered handlers, or previous registration attempts were denied, then no further prompts will be displayed. Please open the dialogue below, then check the registered handler settings in the ssh/sftp/etc. sections. If this program is blocked, you can delete those settings which will allow you to retry registration. If this program is already registered, but it isn't set as the default handler, you can change the default handler too."
	},
	"protocol_register_options_link": {
		"message": "Protocol register"
	},
	"read_size_label": {
		"message": "Read size (KiB)"
	},
	"reconnect_message": {
		"message": "(R)econnect (default), (C)hoose another connection or E(x)it?"
	},
	"relay_retry": {
		"message": "Retrying…"
	},
	"restore_prefs": {
		"message": "Restore backup"
	},
	"send_feedback_label": {
		"message": "Send feedback"
	},
	"ssh_argstr_label": {
		"message": "SSH arguments"
	},
	"ssh_cert_check_refresh": {
		"message": "Refreshing SSH certificate…"
	},
	"ssh_cert_check_result": {
		"message": " ~$1 hours until expiry"
	},
	"ssh_cert_check_start": {
		"message": "Checking SSH certificate freshness…"
	},
	"terminal_clear_menu_label": {
		"message": "Terminal clear"
	},
	"terminal_font_unavailable": {
		"message": "'$1' is not available"
	},
	"terminal_home_developer_settings": {
		"message": "Developer settings"
	},
	"terminal_home_linux_not_enabled": {
		"message": "Visit Developer options to manage Linux"
	},
	"terminal_home_ssh_specify_destination": {
		"message": "Specify the destination with 'username@hostname'"
	},
	"terminal_home_terminal_settings": {
		"message": "Terminal settings"
	},
	"terminal_name_pref_ansi_colors": {
		"message": "ANSI colours"
	},
	"terminal_name_pref_color": {
		"message": "Colour"
	},
	"terminal_pref_alt_gr_mode": {
		"message": "Select an AltGr detection heuristic.\n\n'Auto': Auto-detect based on navigator.language:\n      'en-us' => 'Disable', else => 'right-alt'\n'Disable': Disable any AltGr emulation.\n'ctrl-alt': Assume Ctrl+Alt means AltGr.\n'left-alt': Assume left Alt means AltGr.\n'right-alt': Assume right Alt means AltGr."
	},
	"terminal_pref_ansi_colors": {
		"message": "Set colours for the default palette."
	},
	"terminal_reset_menu_label": {
		"message": "Terminal reset"
	},
	"terminal_settings_background_image_error_size": {
		"message": "The image is too large"
	},
	"terminal_settings_delete_profile_dialog_message": {
		"message": "Are you sure that you want to delete profile ‘$1’?"
	},
	"terminal_settings_reset_dialog_message": {
		"message": "Are you sure that you want to reset the theme to its defaults?"
	},
	"terminal_title_ansi_color_tooltip_0": {
		"message": "Colour 0: Black"
	},
	"terminal_title_ansi_color_tooltip_1": {
		"message": "Colour 1: Red"
	},
	"terminal_title_ansi_color_tooltip_10": {
		"message": "Colour 10: Bright Green"
	},
	"terminal_title_ansi_color_tooltip_11": {
		"message": "Colour 11: Bright Yellow"
	},
	"terminal_title_ansi_color_tooltip_12": {
		"message": "Colour 12: Bright Blue"
	},
	"terminal_title_ansi_color_tooltip_13": {
		"message": "Colour 13: Bright Magenta"
	},
	"terminal_title_ansi_color_tooltip_14": {
		"message": "Colour 14: Bright Cyan"
	},
	"terminal_title_ansi_color_tooltip_15": {
		"message": "Colour 15: Bright White"
	},
	"terminal_title_ansi_color_tooltip_2": {
		"message": "Colour 2: Green"
	},
	"terminal_title_ansi_color_tooltip_3": {
		"message": "Colour 3: Yellow"
	},
	"terminal_title_ansi_color_tooltip_4": {
		"message": "Colour 4: Blue"
	},
	"terminal_title_ansi_color_tooltip_5": {
		"message": "Colour 5: Magenta"
	},
	"terminal_title_ansi_color_tooltip_6": {
		"message": "Colour 6: Cyan"
	},
	"terminal_title_ansi_color_tooltip_7": {
		"message": "Colour 7: White"
	},
	"terminal_title_ansi_color_tooltip_8": {
		"message": "Colour 8: Bright Black"
	},
	"terminal_title_ansi_color_tooltip_9": {
		"message": "Colour 9: Bright Red"
	},
	"terminal_title_pref_behavior": {
		"message": "Behaviour"
	},
	"terminal_title_pref_keyboard_mouse": {
		"message": "Keyboard and mouse"
	},
	"terminal_tmux_integration_activated": {
		"message": "Tmux integration mode activated. Press Ctrl-C to detach tmux or input tmux commands"
	},
	"terminal_too_much_output_message": {
		"message": "Too much output to announce; navigate to rows manually to read."
	},
	"tip_12": {
		"message": "Use Yubikeys and other smart cards for SSH authentication: https://hterm.org/x/ssh/docs/hwkey"
	},
	"tip_14": {
		"message": "Holding Ctrl (Cmd on macOS) while right-clicking brings up a context menu."
	},
	"tip_4": {
		"message": "ChromeOS can mount file systems via SFTP and browse via the Files app. Use 'SFTP mount' instead of 'Connect'."
	},
	"tip_6": {
		"message": "Colour your output/prompt using basic 16 colours & 256 colours & full 24-bit colours: http://tldp.org/HOWTO/Bash-Prompt-HOWTO/x329.html"
	},
	"tip_7": {
		"message": "Copy to your clipboard from Emacs/Vim/etc. using OSC-52: https://hterm.org/x/faq/osc52"
	},
	"tip_8": {
		"message": "Chat with fellow HTerm/Secure Shell users via chromium-hterm@chromium.org: https://goo.gl/RYHiK"
	},
	"tip_9": {
		"message": "Found a bug? Want to request a new feature? Let us know: https://hterm.org/x/ssh/newbug"
	},
	"unexpected_error": {
		"message": "An unexpected error occurred; please check the JavaScript console for more details."
	},
	"welcome_faq": {
		"message": "Answers to frequently asked questions: $1 (Ctrl+Click on links to open)"
	},
	"welcome_tip_of_day": {
		"message": "Random pro tip #$1: $2"
	},
	"write_size_label": {
		"message": "Write size (KiB)"
	},
	"zoom_warning": {
		"message": "Please set Chrome menu->Zoom to 100%"
	}
}
